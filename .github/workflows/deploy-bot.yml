name: Deploy Bot to VPS

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup and Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            # Ensure git is installed
            if ! command -v git >/dev/null 2>&1; then
              echo "git not found, installing..."
              apt-get update && apt-get install -y git
            fi

            # Ensure docker is installed
            if ! command -v docker >/dev/null 2>&1; then
              echo "Docker not found, installing..."

              apt-get update
              apt-get install -y ca-certificates curl gnupg lsb-release

              install -m 0755 -d /etc/apt/keyrings
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
              chmod a+r /etc/apt/keyrings/docker.gpg

              echo \
                "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
                $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

              apt-get update
              apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
            fi

            # Setup directory and repository
            if [ ! -d "/root/app" ]; then
              mkdir -p /root/app
              cd /root
              git clone https://github.com/${{ github.repository }}.git app
            else
              cd /root/app
              git pull origin main
            fi

            cd /root/app
            docker build -t tg-bot .

            # Stop and remove existing container if it exists
            docker stop tg-bot 2>/dev/null || true
            docker rm tg-bot 2>/dev/null || true

            # Run new container
            docker run -d --rm --name tg-bot -p 3000:3000 \
              -e TELEGRAM_BOT_TOKEN="${{ secrets.TELEGRAM_BOT_TOKEN }}" \
              -e CHECK_INTERVAL="${{ secrets.CHECK_INTERVAL }}" \
              tg-bot
